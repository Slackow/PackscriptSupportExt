{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Packscript",
  "patterns": [
    { "include": "#blankLines" },
    { "include": "#packscript-special" },
    { "include": "#packscript-regular" },
    { "include": "#python-regular" }
  ],
  "repository": {
    "packscript-special": {
      "begin": "^\\s*/\\$",
      "end": "(?<![\\\\\\n])$",
      "name": "command.line.special.packscript",
      "patterns": [
        {
          "match": "\\$\\(.*?\\)",
          "name": "constant.character"
        },
        { "include": "#packscript" }
      ]
    },
    "packscript-regular": {
      "begin": "^(?=\\s*/.*)",
      "end": "(?<![\\\\\\n])$",
      "name": "command.line.special.regular",
      "patterns": [{ "include": "#packscript" }]
    },
    "python-regular": {
      "begin": "^(?!\\s*\\/)",
      "end": "$",
      "patterns": [
        { "include": "#python" },
        {
          "match": "(?<=^\\s*)create",
          "name": "keyword.control.packscript"
        }
      ]
    },
    "packscript": {
      "patterns": [
        {
          "match": "\\b[a-zA-Z]\\w*(?=[:=](?!$))",
          "name": "variable.parameter.packscript"
        },
        {
          "match": "@[pears]\\b",
          "name": "entity.name.function.packscript"
        },
        {
          "match": "\\bfunction\\b",
          "name": "keyword.control.packscript"
        },
        {
          "match": "(?<=^\\s*/\\$?|run )\\b(advancement|attribute|ban|ban-ip|banlist|bossbar|clear|clone|damage|data|datapack|debug|defaultgamemode|deop|difficulty|effect|enchant|execute|experience|fill|fillbiome|forceload|gamemode|gamerule|give|help|item|jfr|kick|kill|list|locate|loot|me|msg|op|pardon|pardon-ip|particle|perf|place|playsound|publish|random|recipe|reload|return|ride|save-all|save-off|save-on|say|schedule|scoreboard|seed|setblock|setidletimeout|setworldspawn|spawnpoint|spectate|spreadplayers|stop|stopsound|summon|tag|team|teammsg|teleport|tellraw|tick|time|title|tm|tp|transfer|trigger|w|weather|whitelist|worldborder|xp)\\b",
          "name": "keyword.control.packscript"
        },
        {
          "match": "\\$\\{.*?\\}|\\$[a-zA-Z_]\\w*",
          "name": "string.regexp.packscript"
        },
        {
          "name": "string.quoted.double.packscript",
          "begin": "(\"|')",
          "end": "\\1",
          "patterns": [
            {
              "name": "constant.character.escape.packscript",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "constant.numeric.packscript",
          "match": "\\b(0b[01]+|0o[0-7]+|0x[0-9a-fA-F]+|[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?)[sSbBlL]?\\b"
        }
      ]
    },
    "python": {
      "patterns": [
        {
          "name": "storage.type.python",
          "match": "\\b(if|elif|else|try|except|finally|with|for|while|return|break|continue|import|from|as|pass|raise|in)\\b"
        },
        {
          "name": "storage.type.python",
          "match": "\\b(is|and|or|not)\\b"
        },
        {
          "name": "constant.language.python",
          "match": "\\b(True|False|None)\\b"
        },
        {
          "name": "storage.type.python",
          "match": "\\b(def|global|class|nonlocal)\\b"
        },
        {
          "name": "keyword.other.builtin.python",
          "match": "\\b(print|len|range|open|type|list|dict|set|tuple|int|float|str)\\b"
        },
        {
          "begin": "f(\"\"\"|'''|\"|')",
          "end": "\\1",
          "beginCaptures": {
            "0": {
              "name": "string.interpolated"
            }
          },
          "endCaptures": {
            "0": {
              "name": "string.interpolated"
            }
          },
          "patterns": [
            {
              "name": "string",
              "match": "\\\\.|\\{\\{|\\}\\}"
            },
            {
              "begin": "\\{",
              "end": "\\}",
              "beginCaptures": {
                "0": {
                  "name": "constant.character.escape.python"
                }
              },
              "endCaptures": {
                "0": {
                  "name": "constant.character.escape.python"
                }
              },
              "patterns": [{ "include": "#python" }]
            },
            {
              "match": "[^{]+?",
              "name": "string.interpolated"
            }
          ]
        },
        {
          "name": "string.quoted.other.python",
          "begin": "[rbu]?(\"\"\"|'''|\"|')",
          "end": "\\1",
          "patterns": [
            {
              "name": "constant.character.escape.python",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "constant.numeric.python",
          "match": "\\b(0b[01]+|0o[0-7]+|0x[0-9a-fA-F]+|[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?)\\b"
        },
        {
          "name": "comment",
          "match": "#.*$"
        }
      ]
    },
    "blankLines": {
      "match": "^\\s*$",
      "name": "blank.line.transition"
    }
  },
  "scopeName": "source.dps"
}
